<!--
    <copyright>
        Created by Matt Weber <matt@badecho.com>
        Copyright @ 2021 Bad Echo LLC. All rights reserved.

		Bad Echo Technologies are licensed under a
		Creative Commons Attribution-NonCommercial 4.0 International License.

		See accompanying file LICENSE.md or a copy at:
		http://creativecommons.org/licenses/by-nc/4.0/
    </copyright>
-->
<Grid xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:fenestra="http://schemas.badecho.com/fenestra/2021/02/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:c="clr-namespace:BadEcho.Omnified.Vision.Converters;assembly=BadEcho.Omnified.Vision"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:vm="clr-namespace:BadEcho.Omnified.Vision.ViewModels"
      xmlns:r="clr-namespace:BadEcho.Omnified.Vision.Properties;assembly=BadEcho.Omnified.Vision"
      d:DataContext="{d:DesignInstance Type=vm:VisionViewModel}"
      mc:Ignorable="d"
      VerticalAlignment="Top">
    <Grid.Resources>
        <c:LocationToHorizontalAlignmentConverter x:Key="LocationHorizontalConverter"/>
        <c:LocationToVerticalAlignmentConverter x:Key="LocationVerticalConverter"/>
        <fenestra:DoubleToThicknessConverter x:Key="DoubleToTopConverter"
                                             Scope="Top"
                                             />
    </Grid.Resources>
    <Grid x:Name="AnchorBox"
          Margin="{Binding AnchorBoxVerticalOffset, Converter={StaticResource DoubleToTopConverter}}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <fenestra:OutlinedTextElement Style="{StaticResource VisionTitleTextStyle}"
                                      Text="{x:Static r:Strings.VisionTitleName}"
                                      HorizontalAlignment="{Binding TitleLocation, Converter={StaticResource LocationHorizontalConverter}}"
                                      VerticalAlignment="{Binding TitleLocation, Converter={StaticResource LocationVerticalConverter}}"
                                      Margin="15,0,15,10"
                                      Grid.Row="0">
            <fenestra:OutlinedTextElement.Triggers>
                <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                    <BeginStoryboard>
                        <Storyboard RepeatBehavior="Forever">
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)"
                                             To="0.0"
                                             BeginTime="00:00:16"
                                             Duration="00:00:2"
                                             />
                            <!--New text can be brought in at 18 seconds. Further new text can eb brought in 20 seconds thereafter.-->
                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)"
                                             To="1.0"
                                             BeginTime="00:00:18"
                                             Duration="00:00:2"
                                             />
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard RepeatBehavior="Forever">
                            <StringAnimationUsingKeyFrames Storyboard.TargetProperty="(fenestra:OutlinedTextElement.Text)" Duration="0:0:40">
                                <DiscreteStringKeyFrame Value="{x:Static r:Strings.VisionTitleAddress}" KeyTime="0:0:18"/>
                                <DiscreteStringKeyFrame Value="{x:Static r:Strings.VisionTitleName}" KeyTime="0:0:38"/>
                            </StringAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </fenestra:OutlinedTextElement.Triggers>
        </fenestra:OutlinedTextElement>
        <ItemsControl ItemsSource="{Binding Children}"
                      Grid.Row="1"
                      Margin="15,0,15,0">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <DataTemplate.Resources>
                        <fenestra:ViewContextTemplateSelector x:Key="ContextSelector"/>
                    </DataTemplate.Resources>
                    <UserControl Content="{Binding ModuleViewModel}"
                                 ContentTemplateSelector="{StaticResource ContextSelector}"
                                 HorizontalAlignment="{Binding Location, Converter={StaticResource LocationHorizontalConverter}}"
                                 VerticalAlignment="{Binding Location, Converter={StaticResource LocationVerticalConverter}}"
                                 />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </Grid>
</Grid>